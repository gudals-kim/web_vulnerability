package sec.web.controller.item;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import sec.web.controller.item.form.BasketForm;
import sec.web.domain.basket.BasketRepository;
import sec.web.domain.item.Item;
import sec.web.domain.item.ItemRepository;

import java.util.List;

@Slf4j
@Controller
@RequiredArgsConstructor
@RequestMapping("/item/basket")
public class BasketController {

    private final BasketRepository basketRepository;
    private final ItemRepository itemRepository;

    @GetMapping("/{memberId}")
    public String basket(@PathVariable Long memberId, Model model,
                         @ModelAttribute("basketForm")BasketForm basketForm){
        List<Item> basketItems = basketRepository.findByMemberId(memberId);
        model.addAttribute("basketItems",basketItems);
        return "/item/basket";
    }
    @PostMapping("/{memberId}/basket")
    public String outBasket(@ModelAttribute("basketForm") BasketForm basketForm, BindingResult  bindingResult,
                            @PathVariable Long memberId){
        if (basketForm.getBasketItemIds().length==0){
            bindingResult.reject("NoCheckItem",null,"아무것도 체크하지 않았습니다.");
        }
        for (String StringId : basketForm.getBasketItemIds()) {
            long itemId = Long.parseLong(StringId);
            basketRepository.delete(itemId,memberId);
        }
        return "redirect:/item/basket/{memberId}";
    }
    @PostMapping("/{memberId}/purchase")
    public String purchase(@ModelAttribute("basketForm") BasketForm basketForm){
        for (String StringId : basketForm.getBasketItemIds()) {
            long itemId = Long.parseLong(StringId);
            log.info("itemId={}",itemId);
            Item item = itemRepository.find(itemId);
            log.info("item={}",item);
        }
        return "/item/basket";
    }
    @GetMapping("/{memberId}/{itemId}/add")
    public String addBasket(@PathVariable("memberId") Long memberId,
                            @PathVariable("itemId") Long itemId){
        basketRepository.addBasket(itemId,memberId);
        return "redirect:/item/basket/{memberId}";
    }
}

package sec.web.domain.member;

import lombok.extern.slf4j.Slf4j;
import org.springframework.jdbc.datasource.DataSourceUtils;
import org.springframework.jdbc.support.JdbcUtils;
import org.springframework.stereotype.Repository;
import sec.web.dbconnection.DBConnectionUtil;

import javax.sql.DataSource;
import java.sql.*;
import java.util.*;
import java.util.concurrent.ConcurrentHashMap;

import static sec.web.dbconnection.DBConnectionUtil.*;

@Slf4j
@Repository
public class MemberRepository {
    private final DataSource dataSource;

    public MemberRepository(DataSource dataSource) {
        this.dataSource = dataSource;
    }

    public Member save(Member member){
        String sql = "insert into member(member_name,member_email,member_password) values (?,?,?)";

        Connection con = null;
        PreparedStatement pstmt = null;

        try{
            con = getConnection();
            pstmt = con.prepareStatement(sql);
            pstmt.setString(1,member.getName());
            pstmt.setString(2,member.getEmail());
            pstmt.setString(3,member.getPassword());
            pstmt.executeUpdate();
            return member;
        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            close(con,pstmt,null);
        }


    }

    public Member findByEmail(String memberEmail){
        String sql = "select * from member where member_email = ?";

        Connection con = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            con = getConnection();
            pstmt = con.prepareStatement(sql);
            pstmt.setString(1,memberEmail);
            rs = pstmt.executeQuery();
            if (rs.next()){
                Member member = new Member(
                        rs.getString("member_name"),
                        rs.getString("member_email"),
                        rs.getString("member_password"));
                member.setId(rs.getLong("member_id"));
                member.setMoney(rs.getInt("member_money"));
                return member;
            }else {
                throw new NoSuchFieldException("member not found memberEmail = "+ memberEmail);
            }
        } catch (SQLException | NoSuchFieldException e) {
            throw new RuntimeException(e);
        } finally {
            close(con,pstmt,rs);
        }

    }

//    public List<Member> findAll(){
//
//    }
//    public void clearStore(){
//    }


    private void close(Connection con, Statement stmt, ResultSet rs){
        JdbcUtils.closeResultSet(rs);
        JdbcUtils.closeStatement(stmt);

        DataSourceUtils.releaseConnection(con,dataSource);
    }
}

package sec.web.domain.member;

import com.zaxxer.hikari.HikariDataSource;
import com.zaxxer.hikari.SQLExceptionOverride;
import org.assertj.core.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import sec.web.dbconnection.ConnectionConst;

import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;

import java.util.Set;

import static org.assertj.core.api.Assertions.*;
import static org.junit.jupiter.api.Assertions.*;
import static sec.web.dbconnection.ConnectionConst.*;

@SpringBootTest
class MemberRepositoryTest {
    MemberRepository repository;


    @BeforeEach
    void beforeEach(){
        HikariDataSource dataSource = new HikariDataSource();
        dataSource.setJdbcUrl(URL);
        dataSource.setUsername(USERNAME);
        dataSource.setPassword(PASSWORD);

        repository = new MemberRepository(dataSource);
    }

    @Test
    @DisplayName("CRUD TEST")
    void crud_test() {

        //email 중복 검증 필요함

        // save
        Member member = new Member("test","test@naver.com","P@sSw0rd");
        repository.save(member);

        //find
        Member findMember = repository.find(member.getEmail());
        System.out.println("findMember.getId() = " + findMember.getId());
        assertThat(findMember.getName()).isEqualTo(member.getName());

        //update
        findMember.setMoney(10000);
        repository.update(findMember);
        Member updateMember = repository.find(findMember.getId());
        System.out.println("updateMember.getId() = " + updateMember.getId());
        assertThat(updateMember.getId()).isEqualTo(findMember.getId());
        assertThat(10000).isEqualTo(updateMember.getMoney());

//        delete
        repository.delete(findMember.getId());
        assertThatThrownBy(()->repository.find(findMember.getId()))
                .isInstanceOf(Exception.class);
    }
//    @Test
//    void 회원삭제() {
//        repository.delete(4L);
//    }
}
package sec.web.service;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import sec.web.controller.member.form.AddMemberForm;
import sec.web.controller.member.form.ChargeCashForm;
import sec.web.controller.member.form.FindMemberForm;
import sec.web.controller.member.form.PasswordSetForm;
import sec.web.domain.member.Member;
import sec.web.domain.member.MemberRepository;

@Slf4j
@Service
public class MemberService {
    private final MemberRepository memberRepository;
    public MemberService(MemberRepository memberRepository){
        this.memberRepository = memberRepository;
    }

    public Member chargeCash(Member member, ChargeCashForm cashForm){
        int money = member.getMoney()+cashForm.getMoney();
        member.setMoney(money);
        return member;
    }
    public boolean isPasswordEqual(AddMemberForm addMemberForm) {
        return addMemberForm.getPassword().equals(addMemberForm.getConfirmPassword());
    }
    public boolean isPasswordEqual(PasswordSetForm passwordSetForm) {
        return passwordSetForm.getPassword().equals(passwordSetForm.getConfirmPassword());
    }
    public void passwordChange(PasswordSetForm passwordForm, Long memberId) {
        Member member = memberRepository.find(memberId);
        member.setPassword(passwordForm.getPassword());
        memberRepository.update(member);
    }
    public AddMemberForm editMember(Long memberId, Member member) {
        AddMemberForm addMember = new AddMemberForm();
        addMember.setId(memberId);
        addMember.setName(member.getName());
        addMember.setEmail(member.getEmail());
        addMember.setPassword(member.getPassword());
        addMember.setMoney(member.getMoney());
        return addMember;
    }

    public void changeMember(AddMemberForm addMember, Long memberId) {
        Member member = memberRepository.find(memberId);
        member.setName(addMember.getName());
        member.setPassword(addMember.getPassword());
        memberRepository.update(member);
    }
    public boolean isMember(FindMemberForm findMemberForm, Member member) {
        return findMemberForm.getName().equals(member.getName()) && findMemberForm.getEmail().equals(member.getEmail());
    }
}

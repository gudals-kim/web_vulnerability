package sec.web.service;

import com.zaxxer.hikari.HikariDataSource;
import org.assertj.core.api.Assertions;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import sec.web.domain.member.Member;
import sec.web.domain.member.MemberRepository;

import static org.assertj.core.api.Assertions.*;
import static org.junit.jupiter.api.Assertions.*;
import static sec.web.dbconnection.ConnectionConst.*;
@SpringBootTest
class LoginServiceTest {
    @Autowired
    LoginService loginService;
    @Autowired
    MemberRepository memberRepository;
    @AfterEach
    void afterEach(){
        memberRepository.reset();
        Member testMember = new Member("test","test@test.com","123!@#qweQWE");
        Member test2Member = new Member("test2","test2@test.com","123!@#qweQWE");
        memberRepository.save(testMember);
        memberRepository.save(test2Member);
    }
    @BeforeEach
    void beforeEach(){
        HikariDataSource dataSource = new HikariDataSource();
        dataSource.setJdbcUrl(URL);
        dataSource.setUsername(USERNAME);
        dataSource.setPassword(PASSWORD);

        memberRepository = new MemberRepository(dataSource);
    }
    @Test
    @DisplayName("로그인 성공 테스트")
    void login() {
        Member findMember = memberRepository.find("test@test.com");
        System.out.println("findMember = " + findMember);
        Member loginMember = loginService.login("test@test.com", "!@#qweQWE");
        assertThat(loginMember).isEqualTo(findMember);
    }
    @Test
    @DisplayName("이메일 실패 테스트")
    void login_Email_fail() {
        Member loginMember = loginService.login("fial@fial.com", "!@#qweQWE");
        assertThat(loginMember).isNull();
    }
    @Test
    @DisplayName("비밀번호 실패 테스트")
    void login_Password_fail() {
        Member loginMember = loginService.login("test@test.com", "Fai1failFai1");
        assertThat(loginMember).isNull();
    }
}
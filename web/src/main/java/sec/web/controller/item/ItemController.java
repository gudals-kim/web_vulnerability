package sec.web.controller.item;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import sec.web.domain.item.Item;
import sec.web.domain.item.ItemRepository;
import sec.web.domain.member.Member;
import sec.web.domain.member.MemberRepository;
import sec.web.session.SessionConst;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.util.List;

@Slf4j
@Controller
@RequiredArgsConstructor
@RequestMapping("/item")
public class ItemController {
    private final ItemRepository itemRepository;
    private final MemberRepository memberRepository;

    @GetMapping("/items/{memberId}")
    public String registeredItems(@PathVariable Long memberId, Model model){
        List<Item> registerItems = itemRepository.findByMemberId(memberId);
        if (registerItems.isEmpty()){
            //등록 상품이 없을때 처리
        }
        model.addAttribute("registerItems",registerItems);
        return "item/registerItems";
    }

    @GetMapping("/{itemId}")
    public String item(@PathVariable Long itemId, Model model, HttpServletRequest request){
        Item item = itemRepository.find(itemId);
        //세션이 있으면 있는 세션반환, 없으면 신규 세션 생성
        HttpSession session = request.getSession();
        //세션에 로그인 회원 정보 보관
        Member member = (Member)session.getAttribute(SessionConst.LOGIN_MEMBER);
        log.info("member={}",member);
        model.addAttribute("member",member);
        model.addAttribute("item",item);
        return "item/item";
    }
}
